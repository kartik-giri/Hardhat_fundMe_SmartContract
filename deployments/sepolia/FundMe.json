{
  "address": "0x4C9Bd22765714d22f24952A17e4bD4F262E1ca1C",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "pricefeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Notowner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "addressToAmountFunded",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "fund",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "funders",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "i_owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "minmumUSD",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pricefeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x49d7220bcb2936edef8ef1c46b4ba277e4c184a8cb9dbd582c9ebd1727ddaa28",
  "receipt": {
    "to": null,
    "from": "0xB06EE66b2736C99c31258d50a8E235D7137e7C81",
    "contractAddress": "0x4C9Bd22765714d22f24952A17e4bD4F262E1ca1C",
    "transactionIndex": 11,
    "gasUsed": "843573",
    "logsBloom": "0x
    "blockHash": "0x3a400122487dfd9c259b266054ae7e92daa9385cb8f67c7d6ae47045cb1f38d9",
    "transactionHash": "0x49d7220bcb2936edef8ef1c46b4ba277e4c184a8cb9dbd582c9ebd1727ddaa28",
    "logs": [],
    "blockNumber": 3437289,
    "cumulativeGasUsed": "6516468",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x694AA1769357215DE4FAC081bf1f309aDC325306"
  ],
  "numDeployments": 1,
  "solcInputHash": "6b162683abc40e556f431df5b1206d59",
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"pricefeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Notowner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"addressToAmountFunded\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"funders\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"minmumUSD\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pricefeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/FundMe.sol\":\"FundMe\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/FundMe.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity ^0.8.0;\\n\\n// get funds from users..\\n// withdraw funds..\\n// set a minimum funcding value in USD..\\n\\nimport \\\"./PriceConverter.sol\\\";\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nerror Notowner();\\n\\ncontract FundMe{\\n using PriceConverter for uint256;\\n \\n uint256 public constant minmumUSD = 50 * 1e18;\\n\\n\\n address[] public funders;\\n mapping(address => uint) public addressToAmountFunded;\\n\\n address public immutable i_owner;\\n\\n AggregatorV3Interface public pricefeed;\\n\\n constructor(address pricefeedAddress){\\n     i_owner = msg.sender;\\n     pricefeed = AggregatorV3Interface(pricefeedAddress);\\n }\\n\\n    function fund() public payable {\\n     require(msg.value.getConversionRate(pricefeed) >= minmumUSD, \\\"Not enough ether!\\\");\\n     if(addressToAmountFunded[msg.sender] == 0){\\n\\n     funders.push(msg.sender);\\n     }\\n     addressToAmountFunded[msg.sender] += msg.value;\\n     \\n    }\\n\\n    modifier onlyowner {\\n       if(msg.sender != i_owner){\\n           revert Notowner();\\n       }\\n       _; \\n    }\\n\\n    function withdraw() public onlyowner {\\n    // require(msg.sender == owner, \\\"you are not owner\\\");\\n    for(uint funderIndex ; funderIndex < funders.length ; funderIndex++){\\n       address funder = funders[funderIndex];\\n       addressToAmountFunded[funder] = 0;\\n    }\\n     funders = new address[](0);\\n\\n     // transfer\\n    //  payable (msg.sender).transfer(address(this).balance);\\n    //  // send\\n    //  // it retrun bool\\n    //  bool sendSuccess = payable(msg.sender).send(address(this).balance);\\n    //  require(sendSuccess, \\\"Send failed\\\");\\n     // call\\n     (bool callSuccess,)= payable(msg.sender).call{value: address(this).balance}(\\\"\\\");\\n      require(callSuccess, \\\"Call failed\\\");\\n\\n    }\\n\\n      receive() external payable{\\n        fund();\\n    }\\n\\n    fallback() external payable{\\n        fund();\\n    }\\n\\n   \\n}\",\"keccak256\":\"0xede5757b2bd2b57983708f04925c68f72b6cf84da94efb28c517ae6ff29cf6ee\",\"license\":\"GPL-3.0\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\r\\n\\r\\n// library can not have state variable and can not send ether and its functions are internal ....\\r\\n\\r\\nlibrary PriceConverter{\\r\\n    \\r\\n    function getprice(AggregatorV3Interface _pricefeed) internal view returns(uint256) {\\r\\n    // to communicate with other contract we need 2 things.\\r\\n    // 1. ABI\\r\\n    // 2. Address:0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e \\r\\n\\r\\n    // AggregatorV3Interface pricefeed = AggregatorV3Interface(0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e);\\r\\n     (,int price,,,)= _pricefeed.latestRoundData();\\r\\n     return uint256(price * 1e10);\\r\\n\\r\\n    }\\r\\n\\r\\n    function getConversionRate(uint256 ethAmt, AggregatorV3Interface _pricefeed) internal view returns(uint256){\\r\\n        uint ethprice = getprice(_pricefeed);\\r\\n        uint256 ethAmtInUSD = (ethprice * ethAmt) / 1e18;\\r\\n        return ethAmtInUSD;\\r\\n    }\\r\\n}\",\"keccak256\":\"0xb1c1b94e07e5b29b535c56f1e724daf22ef1e6954bb286e688f42627cc090d7f\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b50604051610f3e380380610f3e83398181016040528101906100329190610110565b3373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff168152505080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505061013d565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100dd826100b2565b9050919050565b6100ed816100d2565b81146100f857600080fd5b50565b60008151905061010a816100e4565b92915050565b600060208284031215610126576101256100ad565b5b6000610134848285016100fb565b91505092915050565b608051610ddf61015f6000396000818161033b01526105b90152610ddf6000f3fe6080604052600436106100745760003560e01c8063590f21131161004e578063590f21131461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633776f3521461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a261032c565b6040516100af91906107a7565b60405180910390f35b3480156100c457600080fd5b506100cd610339565b005b3480156100db57600080fd5b506100f660048036038101906100f19190610825565b610579565b60405161010391906107a7565b60405180910390f35b34801561011857600080fd5b50610121610591565b60405161012e91906108b1565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b506101566105b7565b60405161016391906108db565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190610922565b6105db565b6040516101a091906108db565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461061a90919063ffffffff16565b1015610229576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610220906109ac565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036102d4576000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461032391906109fb565b92505081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103be576040517f7e082d0500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104695760008082815481106103e3576103e2610a2f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046190610a5e565b9150506103c1565b50600067ffffffffffffffff81111561048557610484610aa6565b5b6040519080825280602002602001820160405280156104b35781602001602082028036833780820191505090505b50600090805190602001906104c99291906106e7565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104f090610b06565b60006040518083038185875af1925050503d806000811461052d576040519150601f19603f3d011682016040523d82523d6000602084013e610532565b606091505b5050905080610576576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056d90610b67565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081815481106105eb57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061062683610656565b90506000670de0b6b3a7640000858361063f9190610b87565b6106499190610bf8565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156106a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c89190610cb6565b5050509150506402540be400816106df9190610d31565b915050919050565b828054828255906000526020600020908101928215610760579160200282015b8281111561075f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610707565b5b50905061076d9190610771565b5090565b5b8082111561078a576000816000905550600101610772565b5090565b6000819050919050565b6107a18161078e565b82525050565b60006020820190506107bc6000830184610798565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107f2826107c7565b9050919050565b610802816107e7565b811461080d57600080fd5b50565b60008135905061081f816107f9565b92915050565b60006020828403121561083b5761083a6107c2565b5b600061084984828501610810565b91505092915050565b6000819050919050565b600061087761087261086d846107c7565b610852565b6107c7565b9050919050565b60006108898261085c565b9050919050565b600061089b8261087e565b9050919050565b6108ab81610890565b82525050565b60006020820190506108c660008301846108a2565b92915050565b6108d5816107e7565b82525050565b60006020820190506108f060008301846108cc565b92915050565b6108ff8161078e565b811461090a57600080fd5b50565b60008135905061091c816108f6565b92915050565b600060208284031215610938576109376107c2565b5b60006109468482850161090d565b91505092915050565b600082825260208201905092915050565b7f4e6f7420656e6f75676820657468657221000000000000000000000000000000600082015250565b600061099660118361094f565b91506109a182610960565b602082019050919050565b600060208201905081810360008301526109c581610989565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a068261078e565b9150610a118361078e565b9250828201905080821115610a2957610a286109cc565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a698261078e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a9b57610a9a6109cc565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610af0600083610ad5565b9150610afb82610ae0565b600082019050919050565b6000610b1182610ae3565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b51600b8361094f565b9150610b5c82610b1b565b602082019050919050565b60006020820190508181036000830152610b8081610b44565b9050919050565b6000610b928261078e565b9150610b9d8361078e565b9250828202610bab8161078e565b91508282048414831517610bc257610bc16109cc565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c038261078e565b9150610c0e8361078e565b925082610c1e57610c1d610bc9565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c4881610c29565b8114610c5357600080fd5b50565b600081519050610c6581610c3f565b92915050565b6000819050919050565b610c7e81610c6b565b8114610c8957600080fd5b50565b600081519050610c9b81610c75565b92915050565b600081519050610cb0816108f6565b92915050565b600080600080600060a08688031215610cd257610cd16107c2565b5b6000610ce088828901610c56565b9550506020610cf188828901610c8c565b9450506040610d0288828901610ca1565b9350506060610d1388828901610ca1565b9250506080610d2488828901610c56565b9150509295509295909350565b6000610d3c82610c6b565b9150610d4783610c6b565b9250828202610d5581610c6b565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d8d57610d8c6109cc565b5b8282058414831517610da257610da16109cc565b5b509291505056fea2646970667358221220de3cbedb43fb1a86fa5d56c53f02c779c9505956e31996eea99b574f5759196964736f6c63430008120033",
  "deployedBytecode": "0x6080604052600436106100745760003560e01c8063590f21131161004e578063590f21131461010c578063b60d428814610137578063dba6335f14610141578063dc0d3dff1461016c57610083565b80633776f3521461008d5780633ccfd60b146100b85780633e47d6f3146100cf57610083565b36610083576100816101a9565b005b61008b6101a9565b005b34801561009957600080fd5b506100a261032c565b6040516100af91906107a7565b60405180910390f35b3480156100c457600080fd5b506100cd610339565b005b3480156100db57600080fd5b506100f660048036038101906100f19190610825565b610579565b60405161010391906107a7565b60405180910390f35b34801561011857600080fd5b50610121610591565b60405161012e91906108b1565b60405180910390f35b61013f6101a9565b005b34801561014d57600080fd5b506101566105b7565b60405161016391906108db565b60405180910390f35b34801561017857600080fd5b50610193600480360381019061018e9190610922565b6105db565b6040516101a091906108db565b60405180910390f35b6802b5e3af16b18800006101e8600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff163461061a90919063ffffffff16565b1015610229576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610220906109ac565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054036102d4576000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505b34600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461032391906109fb565b92505081905550565b6802b5e3af16b188000081565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103be576040517f7e082d0500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60005b6000805490508110156104695760008082815481106103e3576103e2610a2f565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1690506000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050808061046190610a5e565b9150506103c1565b50600067ffffffffffffffff81111561048557610484610aa6565b5b6040519080825280602002602001820160405280156104b35781602001602082028036833780820191505090505b50600090805190602001906104c99291906106e7565b5060003373ffffffffffffffffffffffffffffffffffffffff16476040516104f090610b06565b60006040518083038185875af1925050503d806000811461052d576040519150601f19603f3d011682016040523d82523d6000602084013e610532565b606091505b5050905080610576576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161056d90610b67565b60405180910390fd5b50565b60016020528060005260406000206000915090505481565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600081815481106105eb57600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008061062683610656565b90506000670de0b6b3a7640000858361063f9190610b87565b6106499190610bf8565b9050809250505092915050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a060405180830381865afa1580156106a4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106c89190610cb6565b5050509150506402540be400816106df9190610d31565b915050919050565b828054828255906000526020600020908101928215610760579160200282015b8281111561075f5782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555091602001919060010190610707565b5b50905061076d9190610771565b5090565b5b8082111561078a576000816000905550600101610772565b5090565b6000819050919050565b6107a18161078e565b82525050565b60006020820190506107bc6000830184610798565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006107f2826107c7565b9050919050565b610802816107e7565b811461080d57600080fd5b50565b60008135905061081f816107f9565b92915050565b60006020828403121561083b5761083a6107c2565b5b600061084984828501610810565b91505092915050565b6000819050919050565b600061087761087261086d846107c7565b610852565b6107c7565b9050919050565b60006108898261085c565b9050919050565b600061089b8261087e565b9050919050565b6108ab81610890565b82525050565b60006020820190506108c660008301846108a2565b92915050565b6108d5816107e7565b82525050565b60006020820190506108f060008301846108cc565b92915050565b6108ff8161078e565b811461090a57600080fd5b50565b60008135905061091c816108f6565b92915050565b600060208284031215610938576109376107c2565b5b60006109468482850161090d565b91505092915050565b600082825260208201905092915050565b7f4e6f7420656e6f75676820657468657221000000000000000000000000000000600082015250565b600061099660118361094f565b91506109a182610960565b602082019050919050565b600060208201905081810360008301526109c581610989565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000610a068261078e565b9150610a118361078e565b9250828201905080821115610a2957610a286109cc565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6000610a698261078e565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a9b57610a9a6109cc565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600081905092915050565b50565b6000610af0600083610ad5565b9150610afb82610ae0565b600082019050919050565b6000610b1182610ae3565b9150819050919050565b7f43616c6c206661696c6564000000000000000000000000000000000000000000600082015250565b6000610b51600b8361094f565b9150610b5c82610b1b565b602082019050919050565b60006020820190508181036000830152610b8081610b44565b9050919050565b6000610b928261078e565b9150610b9d8361078e565b9250828202610bab8161078e565b91508282048414831517610bc257610bc16109cc565b5b5092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610c038261078e565b9150610c0e8361078e565b925082610c1e57610c1d610bc9565b5b828204905092915050565b600069ffffffffffffffffffff82169050919050565b610c4881610c29565b8114610c5357600080fd5b50565b600081519050610c6581610c3f565b92915050565b6000819050919050565b610c7e81610c6b565b8114610c8957600080fd5b50565b600081519050610c9b81610c75565b92915050565b600081519050610cb0816108f6565b92915050565b600080600080600060a08688031215610cd257610cd16107c2565b5b6000610ce088828901610c56565b9550506020610cf188828901610c8c565b9450506040610d0288828901610ca1565b9350506060610d1388828901610ca1565b9250506080610d2488828901610c56565b9150509295509295909350565b6000610d3c82610c6b565b9150610d4783610c6b565b9250828202610d5581610c6b565b91507f80000000000000000000000000000000000000000000000000000000000000008414600084121615610d8d57610d8c6109cc565b5b8282058414831517610da257610da16109cc565b5b509291505056fea2646970667358221220de3cbedb43fb1a86fa5d56c53f02c779c9505956e31996eea99b574f5759196964736f6c63430008120033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 62,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "funders",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 66,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "addressToAmountFunded",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 71,
        "contract": "contracts/FundMe.sol:FundMe",
        "label": "pricefeed",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}